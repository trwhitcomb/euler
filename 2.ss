; Project Euler
; Problem 2
;
; Each new term in the Fibonacci sequence is generated by adding the previous
; two terms.  By starting with 1 and 2, the first 10 terms will be:
; 1, 2, 3, 5,  8, 13, 21, 34, 55, 89, ...
; Find the sum of all the even-valued terms in the sequence which do not exceed
; four million

(define (is-even? n)
  (= 0 (modulo n 2)))

; The two golden ratio terms
(define phi
  (/ (+ 1 (sqrt 5)) 2))
(define psi
  (/ (- 1 (sqrt 5)) 2))

; Explicitly calculate F(n).  This is given by
;        Phi^n + Psi^n
; F(n) = --------------
;            5^(1/2)
; The Fibonacci sequence given by the explicit formula yields
; 0, 1, 1, 2, 3, 5, 8 - this is slightly different, but since we are only
; interested in even numbers, it won't matter since the difference is an extra
; '1'
(define (fib n)
  (round (/ (- (expt phi n) 
               (expt psi n)) 
            (sqrt 5))))

; Figure out for a given n, how many terms in the sequence do we need to add
; Since F(n) ~ Phi^n / sqrt(5), then n ~ (ln(F(n)) + ln(sqrt(5)))/ln(Phi)
(define (get-num-terms max-value)
  (round (/ (+ (log max-value)
               (log (sqrt 5)))
            (log Phi))))

; Find the sum of the first n even Fibonacci numbers 
(define (fib-sum-even n)
  (if (= 0 n)
      0
      (let ((F (fib n)))
        (+ (if (is-even? F) F 0)
           (fib-sum-even (- n 1))))))

(fib-sum-even (get-num-terms 4000000))

